"""
Django settings for duan project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Tạo tệp .env và ghi nội dung vào đó
# with open(os.path.join(BASE_DIR, '.env'), 'w') as file:
#     file.write('KEY=VALUE')




# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-d3t)kdu_(s13-^v(9!z4p+=9itl+$^%5c3e3m2ao6$hg=kq%di'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# ALLOWED_HOSTS = []
ALLOWED_HOSTS = ['deloykphtsite-production.up.railway.app', 'https://deloykphtsite-production.up.railway.app']


# deloy 20240702
# CSRF_TRUSTED_ORIGINS = []
# CSRF_TRUSTED_ORIGINS = ['deloykphtsite-production.up.railway.app', 'https://deloykphtsite-production.up.railway.app']

CSRF_TRUSTED_ORIGINS = ['http://deloykphtsite-production.up.railway.app', 'https://deloykphtsite-production.up.railway.app']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'rest_framework',

    'Ithongtincongty',
    'IIcauhinhtrangchu',
    'IIIquanlykho',
    'IVdoitac',
    'Vgiavang',
    'barcodeScaner',
    'VIgiaodichkhach',
    'VIIgiohang',
    'hethong',
    'VIIItratien',
    # 'test_stt1',

    # deloy 20240702 : add 'whitenoise' sau khi pip ,
    'whitenoise.runserver_nostatic',

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    
    # deloy 20240702 : add 'whitenoise' sau khi pip,
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'duan.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],#[os.path.join(BASE_DIR, 'templates')]
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',

                # Đăng ký hàm để truy xuất dữ liệu
                'IIcauhinhtrangchu.views.my_context_processor',
                'VIIgiohang.context_processor.cart',
                # 'hethong.get_user_permissions.get_permissions',
                
                
            ],
        },
    },
]

WSGI_APPLICATION = 'duan.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

# This is sqlite3
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

# This is postgresql
# Load our env after sitings portgressql and dotenv
load_dotenv()

db_host = os.environ.get('HOST')
db_name = os.environ.get('NAME')
db_user = os.environ.get('USER')
db_password = os.environ.get('PASSWORD')
db_port = os.environ.get('PORT')


# # Sử dụng biến môi trường
# print(f"Kết nối cơ sở dữ liệu: {db_host}:{db_name}")
# print(f"Tên người dùng cơ sở dữ liệu: {db_user}")
# print(f"Mật khẩu cơ sở dữ liệu: {db_password}")

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': db_name,# get from postgresql with name: "PGDATABASE" chính là 'your_database_name',
        'USER': db_user,# get name:"PGUSER" hay 'your_database_user',
        'PASSWORD': db_password,#'your_database_password','uEalPvUmMKzLQADehOAUEklVYXvHQzDO'
        'HOST': db_host,#'localhost',
        'PORT': db_port,#'5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'vi'# 'en-us'

TIME_ZONE = 'Asia/Ho_Chi_Minh'#UTC'

USE_I18N = True

#Định dạng dấu phẩy cho hàng ngàn
USE_L10N = True # cài đặt định dạng số và ngày tháng phù hợp với địa phương của người dùng
USE_THOUSAND_SEPARATOR = True #Khi bật, Django sẽ tự động thêm dấu phẩy vào các số lớn hơn 1000.
NUMBER_GROUPING = (3)#(3, 3, 0)
# NUMBER_GROUPING = (3) chỉ định rằng tất cả các nhóm đều có 3 chữ số

USE_TZ = True #tự động điều chỉnh các trường thời gian và ngày tháng theo múi giờ


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

"1. Đăng ký đường dẫn file css,js, imgs"
STATIC_URL = 'static/'

"STATICFILES_DIRS: Thư mục chứa file static."
STATICFILES_DIRS=[os.path.join(BASE_DIR, 'static')]


# Cấu hình cho Django Admin
STATICFILES_DIRS += [
    os.path.join(BASE_DIR, 'staticfiles/admin'),
] #,"static/admin"
  
# deloy 20240702 : 'whitenoise.runserver_nostatic',
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"
# STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")  # Thay đổi "static_collected" thành tên thư mục bạn muốn

# STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# "STATIC_ROOT là đường dẫn tuyệt đối đến thư mục chứa tất cả file static được collect (gom lại)."
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")  # Thay đổi "static_collected" thành tên thư mục bạn muốn


# "--> Chạy python manage.py collectstatic, để gom các file static về STATIC_ROOT"

# Tự tạo folder media do người dùng tải lên 
MEDIA_URL = 'media/'
MEDIA_ROOT = os.path.join(BASE_DIR, "media")  

# TEMPLATE_CONTEXT_PROCESSORS = [
#     # ... bộ xử lý ngữ cảnh khác
#     'kphtWebsite.IIcauhinhtrangchu.views.my_context_processor',
# ]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
